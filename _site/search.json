[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "We have created this website and its Shiny app as a group project submission for the Singapore Management University’s ISSS608 Visual Analytics and Applications course (January 2023 term). We are students of the university’s Master of IT in Business, at its School of Computing and Information Systems.\nThank you for visiting.\n\n\nCheryl Jeanne Chiew\nLaw Man Long\nFarrah Mohd Fadil"
  },
  {
    "objectID": "methodology/methodology.html",
    "href": "methodology/methodology.html",
    "title": "Methodology",
    "section": "",
    "text": "A shiny app to help swim coaches gain insights to a more targeted training approach.\n\n\n\n\nTo build the app, we have used data scraped from official results released by the Tokyo Olympics official timing sponsor, Omega, in .pdf format. The SwimmeR package was used for data-scraping. (It should be noted that the SwimmeR package was removed from the CRAN repository on 01/03/2023, however earlier versions are still available in the CRAN archive. As at 15/03/2023, the original data files, in .pdf format, remain publicly available at the SwimmeR package developer’s GitHub repository.) \nThe data comprises the following, for each registered competitor at the Tokyo Olympics swimming events: \n\nRound (Heats, Semi-Finals, Finals) \nEvent (e.g. Men’s 100m Freestyle, Women’s 200m Butterfly, etc) \nReaction time \nFinal time (in minutes, seconds and milliseconds to two decimal places) \nSplit times (in seconds and milliseconds to two decimal places) \nCompetitor name \nTeam name \nCompetitor’s lane at event \nCompetitor’s position at end of the event \n\nThe following additional variables were derived:\n\nAverage speed (in metres per second, over an entire round for an event type)\nSpeed per split (in metres per second)\n\n\n\n\n\n\nThe app comprises five sections, as follow:\n\n\n\nIn this section, the app user will be able to peruse the datasets that have been uploaded to the app, in data table format.\n\n\n\n\n\nThe app user will be given the opportunity to explore and confirm the following:\n\nExplore the distribution of (i) average speed & (ii) reaction time\nExplore the distribution of (i) average speed & (ii) reaction time of different continents (grouped by countries data)\nCompare the mean of (i) average speed & (ii) reaction time by selected variables and test the hypothesis that mean (i) average speed & (ii) reaction time of swimmers for any particular event is not the same\nCorrelation between (i) average speed & (ii) reaction time for different styles, gender, distance and rounds\n\nBelow charts will be built to visualize the exploration and statistical analysis:\n\nInteractive histogram and bar chart to shows the distribution using ggiraph and ggplot. The two graphs will be patched together with patchwork\nScatterdot plot to show the (i) average speed & (ii) reaction time by continents using ggdotplotstats\nVolin boxplot to compare the mean of (i) average speed & (ii) reaction time using ggbetweenstats\nScatterdot plot to show the correlation between (i) average speed & (ii) reaction time using ggstatsplots\n\nThe app user can select different variables/ options to run customized analysis:\n\n\nUser can select the data scope with different variables including styles, gender, distance and rounds. In this way the user can select which variables to focus on. For example, user can select Style = backstroke, Gender = Male, Distance = 100m and Rounds = ALL to understand the average speed distribution for all rounds in the 100m Male Backstoke Event\nUser can also customize the bin size for histogram to show meaningful pattern in distribution\nUser can customize the statistical method such as parametric, nonparametric, robust or bayes for volin boxplot base on the distribution of the swimmer data.\n\n\n\n\n\n\nThe app user will be required to choose from the following options:\n\n\n\n\n* There exists no authoritative approach to how a swimmer’s pace over a race should be categorised. In general, three broad pacing “strategies” are referred to in online literature: a “positive split”, where the athlete’s average speed during the second half of a race is slower than that for the first half; a “negative split”, where the second half is faster; and “even pacing”, where the athlete maintains an even pace from the first to the second half of the race.\nOnline literature does not offer any authoritative comment on the range of variability from the athlete’s average speed that qualifies as “even pacing”. Thus the user may choose this range. The lower and upper ends of the range are each expressed as swimmer’s average speed over the second half of the race as a percentage of the swimmer’s average speed over the first half of the race. To aid the user’s decision, a frequency table is automatically plotted for the chosen event, where the frequency of average speed over the second half of the race as a percentage of the average speed over the first half of the race, is shown. If the swimmer’s average speed in the second half of the race is slower than this range, then the swimmer’s pacing strategy is considered as “positive split”; likewise, if it is faster, then it is a “negative split”. \n\nThere are five sub-sections in this section:\n\n\n\nThe top of the main panel provides a visualisation offering an overview based on the app user’s inputs. \n\nA multiple line chart showing the speed of each swimmer at each split. [The average speed across all swimmers for each split is also shown.]  \nA bar chart showing each swimmer’s average speed for each round in the event. [This chart would be ordered from fastest to slowest speed.] \nThe charts are interactive - hovering over a line will highlight it and show: Name, Team, Round, Place and Final Time. The corresponding bar in the bar chart would also be highlighted. \n##### Distance\n\nThe app user may test the hypothesis that a swimmer’s speed during a split is correlated with the distance that the swimmer is at. \n\nVisualise using a scatter plot, with distance on the x-axis and speed on the y-axis. There are two graphs: one where all splits are included, and another where the first and last splits are excluded.\nFor each, test the null hypothesis that the swimmer’s split time is not at all correlated with the distance they are at in the swim, using cor.test().\n\n\n\n\nThe app user can visualise the three default pacing categories – Positive Split, Negative Split, Even Pacing – in a multiple line chart, where the colour of the line indicates the pacing category. \n\nFrequency table, showing the count for each percentage range (where the lower and upper ends are each average speed during second half of the race as a percentage of average speed during the first half of the race). This will help user decide what inputs to provide as the range recognised as “Even Pacing”. \nLine chart similar to the one in overview, except lines are coloured based on pacing category \n\n\n\n\nThe app user may conduct hierarchical clustering using hclust to discover possible other alternative pacing clusters. \n\nThe clustering is visualised as a dendrogram with clusters differentiated by colour.  \nCluster labels are appended to the dataset, allowing the user to visualise a multiple line chart showing how speed changes over splits for each cluster.\n\n\n\n\n\nAnalysis of Variance (ANOVA) to determine presence of statistically significant differences between the mean performances for different pacing categories \n\nOne-way ANOVA tests are conducted for differences in median performance (average speed, final time) for different pacing categories. The results are visualised as violin boxplots using ggstatsplots. (The non-parametric method is default chosen for the ANOVA tests because of small sample sizes.)\n\n\n\n\n\nTo enhance the dataset with more information regarding the fractional improvement of swimmers throughout the rounds, feature engineering techniques have been utilized to create new variables:  \n\nFractional Improvement (Semis to Finals)= (Semifinals Time – Finals Time) / Semifinals Time \nFractional Improvement (Heats to Finals) = (Heats Time – Finals Time) / Heats Time \n\nThe app user will be given the opportunity to understand how athletes’ performance changes from the earlier rounds to the finals: \n\nFractional changes in swim performance improvement between heats, semis, and finals can be uncovered by utilizing Cumulative Distribution Function (CDF) plots. These results are presented through plotly, providing users with the ability to zoom in on areas of interest and hover over tooltips for additional information, thus enhancing the level of interactivity. \nThe utilization of the Gradient Interval Plot feature from ggdist enables straightforward visualization of the fractional time improvements’ distribution at both the 66% and 95% confidence interval levels. \n\n\n\n\nThe dataset has been enriched by the introduction of new data, coupled with the application of feature engineering techniques to create variables that offer further insights into swimmers’ performance with respect to Olympic success. \n\nSDTime – This variable represents the standard deviation of a given swimmer’s time logged over rounds.\nAvgTime - This variable represents the mean of a given swimmer’s time logged over rounds. \nPodium – This is a binary variable which determines if a swimmer has has podiumed in his/her event.  \nOlypRecord – This variable represents the Olympic Record time for a given event. \nOlypQualTime – This variable represents the Olympic Qualifying time for a given event. \nRelTime_OQT = (AvgTime -  OlypQualTime)/ AvgTime \nRelTime_ORT = (AvgTime - OlypRecord)/ AvgTime \nRelTime_OQT_LR – This binary variable represents is a swimmer’s AvgTime is faster than the Olympic Qualifying time.  \nRelTime_ORT_LR - This binary variable represents is a swimmer’s AvgTime is faster than the Olympic Record time. \n\nIn the application, users can build a multivariate regression model to analyse how the various explanatory variables influence a swimmer’s Final swim time, thereby enhancing their comprehension of the performance determinants. To accomplish this, the performance package is utilized to visualize variable multicollinearity, where users can select appropriate variables for the regression model, and the ggstatsplot package is employed to visualize the regression model’s parameters. \n\n\n\n\nHere is the complete list of R packages that were used to develop the app (shown in alphabetical order):\n\ndendextend\ndplyr\nDT\ngapminder\nggdist\nggiraph\nggplot2\nggstatsplot\nhtmltools\nlubridate\npatchwork\nperformance\nplotly\nPMCMRplus\nRColorBrewer\nrstantools\nscales\nshiny\nshinythemes\ntidyverse"
  },
  {
    "objectID": "userguide/userguide.html",
    "href": "userguide/userguide.html",
    "title": "User Guide",
    "section": "",
    "text": "The purpose of this application is to enable swimmers and coaches to incorporate a data-driven approach into their training program. Using analytical tools, the user gains insights that can help improve training and enhance competition performance.\n\nThe application comprises six sections, as follows:\n\nAbout\nData\nSpeed/Time\nSplit Times\nPerformance over Rounds\nPrediction"
  },
  {
    "objectID": "userguide/userguide.html#data",
    "href": "userguide/userguide.html#data",
    "title": "User Guide",
    "section": "2. Data",
    "text": "2. Data\nThe “Data” section displays the primary dataset upon which the app and its analysis are based. Users can explore the dataset by utilizing wildcard searches and sorting expressions to refine and filter the data as desired.\n\n\nNote that this app was built on a dataset comprising official results from swimming events at the Tokyo Summer Olympics 2020. For more details on how the data was obtained, see our methodology. The features of this app are not specific to the Tokyo Summer Olympics and are envisioned to work on similar datasets, i.e. other swimming competitions that follow a similar format."
  },
  {
    "objectID": "userguide/userguide.html#speed-time",
    "href": "userguide/userguide.html#speed-time",
    "title": "User Guide",
    "section": "3. Speed & Time",
    "text": "3. Speed & Time\nThe user may select Average Speed and Reaction Time from the dropdown list under “Speed/Time” tab.\n\n\n3.1 Average Speed\nThere are sub-tabs under “Average Speed”: Distribution, Compare Speed and Correlation. The unit for average speed is miles per second.\n\n3.1.1 Distribution\n\n\n\nThere are 2 data visualisations under distribution. The graph on top is the histogram which shows the distribution of the average speed of individual swimmers. The user may hover the pointer over the graph to see the average speed and swimmer name.\nOn the left, the user can select the parameters for the histogram graph:\n\nSelect type of styles, gender, distance and rounds. The user can select multiple options for each parameter\nSelect the bin width\n\nBy customizing bin width, the user may better visualize the pattern for different parameters.\nThe Scatterstats Plot below shows the average speed of swimmers coming from different continents. The continent data comes from the “Country” attribute of each swimmer. Taking reference from the histogram, the user may choose the appropriate statistics test to compare the average speed of different continent. A statistical formula is shown in the chart which gives information about the correlation and significance.\nSimilar to the Histogram, the user may select the parameters for the charts:\n\nSelect type of styles, gender, distance and rounds. The user may select multiple options for each parameter\nSelect the statistical test for the comparison. Options include parametric, nonparametric, robust, and bayes\n\n\n\n3.1.2 Compare Means\n\n\n\n\nThere are 4 violin boxplot under “Compare Mean” tab. Each of the plots shows the distribution of average speed for Style, Gender, Distance and Round respectively.\nThe user may select the parameters to customize charts:\n\nSelect type of styles, gender, distance and rounds. User can select multiple options for each parameter\nSelect the statistical test for the comparison. Options include parametric, nonparametric, robust, and bayes\n\nBy choosing the right parameters, the user may test the null hypothesis that average speed distribution is the same for each of the parameters across the same events/gender/style or rounds. A statistical formula is shown in the chart which gives information about the correlation and significance.\n\n\n3.1.3 Correlation\n\n A scatterplot is used to shows the correlation between Average Speeds and Reaction Time. The Y-axis represents Reaction Time and X axis represents Average Speed. A statistical formula is shown in the chart which gives information about the correlation and significance.\nThe user may select the parameters to customize charts:\n\nSelect type of styles, gender, distance and rounds. The user may select multiple options for each parameter\nSelect the statistical test for the comparison. Options include parametric, nonparametric, robust, and bayes. The user may refer to the histogram under “Distribution” tab to determine the appropriate statistic test.\n\n\n\n\n\n\n3.2 Reaction Time\n\nReaction Time has the similar layout for all the graphs as 3.1 Average Speed. There are sub-tabs including Distribution, Compare Speed and Correlation. The unit for Reaction Time is number of seconds."
  },
  {
    "objectID": "userguide/userguide.html#split-times",
    "href": "userguide/userguide.html#split-times",
    "title": "User Guide",
    "section": "4. Split Times",
    "text": "4. Split Times\n\nIn this section, the user can explore and confirm hypotheses about split times and pacing strategies. Note that only race distances of 200m and over are included in this section, since these are distances that are more relevant in the examination of split times and pacing.\n\n\n\nThe user may provide the following input in the sidebar: the event, the range to be considered as “even” pacing, the distance method for clustering, the method for clustering, and the number of clusters. The default values are shown above.\n\n\n4.1 Overview\n\n\n\nIn the “Overview” sub-section, the user will see two adjacent charts: to the left is a multiple line chart showing the split speeds for each swimmer for the chosen event, and to the right is a column chart showing the average speeds for each swimmer. In the right-hand chart, swimmers are arranged in descending order of speed from top to bottom. The user can highlight a swimmer in either chart, which will highlight the same swimmer in the corresponding chart. When hovering over a swimmer in the line chart, the user will also be able to see the swimmer’s ID, place (final position in the race), and final race time.\nNote that a swimmer may appear more than once if the swimmer participated in more than one round (e.g. Heat and Semi-Final).\n\n\n4.2 Distance\n\n\n\nIn the “Distance” sub-section, the user will see two adjacent charts. To the left, we consider all splits; to the right, we exclude the first and last split. Each chart is a scatterplot with regression line showing the linear relationship between the distance which the swimmer is at during a given split, and the speed at that split. Below each chart are the results of the Pearson’s correlation test, from which p-value and confidence interval, and correlation coefficient, the user may determine the significance and strength of the linear relationship.\n\n\n4.3 Pacing (Default)\n\n\nIn the “Pacing (Default)” sub-section, the user can explore how swimmer pace changed over the course of the race. Here, there are three default pacing categories: Even (speed in second half of race is within the selected range), Positive Split (slower than “Even” in second half of race), and Negative Split (faster than “Even” in second half of race).\nThe user may take reference from the frequency table when deciding on the range for “Even”. The numbers on the slider refer to the speed in the second half of the race, as a percentage of the speed during the first half of the race.\nDuring the first split, a swimmer’s speed is additionally determined by reaction time and dive. During the last split, a swimmer’s speed is also affected by not having to do a “turn” at the end of the lap. Since swimmer speed during the first and last splits of a race tend to be deviate greatly from their speeds during the middle of the race, these are excluded from this analysis.\n\n\nThere are two adjacent charts below the frequency table. These are similar to the charts in 4.1 Overview, except that hovering over either highlights the whole of the desired pacing category.\n\n\n4.4 Pacing (Clusters)\n\n\nIn the “Pacing (Clusters)” sub-section, the user may explore the presence of alternative pacing categories to the default. The variables being passed into the clustering function are the changes in speed between adjacent splits. Three arguments are used in the hierarchical clustering process: the distance method, the hierarchical clustering method, and the number of clusters.\n\nThe user may select from five of the six available distance calculation methods offered by R’s dist() function. The “binary” method of distance calculation is excluded as it is inappropriate in this context. The default method is “Euclidean”, which is also the default method of the dist() function.\nThe user may also select one of four more common hierarchical clustering methods offered by R’s hclust(). The default is “complete”, which is also the default method of the hclust() function.\nFinally the user may choose the number of clusters. The default is 4, which is one more than the three default pacing categories.\n\n\n\nThe “Pacing (Clusters)” sub-section has two tab panels. The first, shown above, displays the dendrogram showing the clusters per user’s choices.\nThe second, shown below, displays the split speeds line charts and average speed column charts. By hovering the pointer over a line or column of interest, all swimmers in the same pacing cluster will be highlighted.\n\n\n\n\n\n4.5 Performance\n\n\n\nIn the last sub-section, the user is able to compare the median average speeds (in metres per second) within each approach to categorising pacing (i.e. default or clusters), using one-way analysis of variance (ANOVA). Clusters with fewer than two data points are automatically dropped. In this regard, the null hypothesis is that there is no difference in median average speed across pacing categories, and the alternative is that there is. By comparing both charts, the user may also be better informed whether to apply the default pacing categories in the user’s training programme, or to consider alternative pacing categories (i.e. clusters).\nIn most cases, the number of data points in each pacing category or cluster would be less than 30. This is due to the size of the overall dataset. Hence the ANOVA test performed is a non-parametric one, and the centrality parameter applied is the median. A future iteration of the app may allow the user to test for normality in data distribution and opt for a parametric approach instead."
  },
  {
    "objectID": "userguide/userguide.html#performance-over-time",
    "href": "userguide/userguide.html#performance-over-time",
    "title": "User Guide",
    "section": "5. Performance Over Time",
    "text": "5. Performance Over Time\n\nIn the “Performance Over Time” section, the user can select the appropriate filters to be applied to the Cumulative Distribution Function plot and Gradient Interval plot respectively.\n\n\n\n5.1 Plot Outputs\n\nTo the right of the side bar, the user will find the Cumulative Distribution Function plot and Gradient Interval plot respectively. Various interactive elements have been incorporated into the CDF plot to enhance analytic capabilities:\n\nHover data\n\n\n\n\n\n\nSelection Data"
  },
  {
    "objectID": "userguide/userguide.html#prediction",
    "href": "userguide/userguide.html#prediction",
    "title": "User Guide",
    "section": "6. Prediction",
    "text": "6. Prediction\n\nIn the \"Prediction\" section, the user has the ability to build an appropriate regression model by selecting the appropriate filters to be used.\n\n\n\nBy default, all independent variables are included in the model. However, after performing multi-collinearity model diagnostic checks, the user can identify highly correlated attributes that can negatively impact the model’s performance. The user can then decide which attributes to retain or drop in order to recalibrate the model.\n\n\n\nThe regression model’s output and statistics are generated dynamically, allowing users to visualize the model’s results as it is being constructed in real-time."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "[Click logo for the app]"
  }
]