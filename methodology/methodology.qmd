---
title: "Methodology"
---

# **Swim Analytica**

A shiny app to help swim coaches gain insights to a more targeted training approach.

\

## Data used

To build the app, we have used data scraped from official results released by the Tokyo Olympics official timing sponsor, Omega, in .pdf format. The SwimmeR package was used for data-scraping. (It should be noted that the SwimmeR package was removed from the CRAN repository on 01/03/2023, however earlier versions are still available in the CRAN archive. As at 15/03/2023, the original data files, in .pdf format, remain publicly available at the [SwimmeR package developer's GitHub repository](https://github.com/gpilgrim2670/Pilgrim_Data/tree/master/Tokyo2020).) 

The data comprises the following, for each registered competitor at the Tokyo Olympics swimming events: 

-   Round (Heats, Semi-Finals, Finals) 

-   Event (e.g. Men's 100m Freestyle, Women's 200m Butterfly, etc) 

-   Reaction time 

-   Final time (in minutes, seconds and milliseconds to two decimal places) 

-   Split times (in seconds and milliseconds to two decimal places) 

-   Competitor name 

-   Team name 

-   Competitor's lane at event 

-   Competitor's position at end of the event 

The following additional variables were derived:

-   Average speed (in metres per second, over an entire round for an event type)

-   Speed per split (in metres per second)

\

## App layout

The app comprises five sections, as follow:\

### 1. Data

In this section, the app user will be able to peruse the datasets that have been uploaded to the app, in data table format.

\

### 2. Speed/ Reaction Time

The app user will be given the opportunity to explore and confirm the following:

-   Explore the distribution of (i) average speed & (ii) reaction time

-   Explore the distribution of (i) average speed & (ii) reaction time of different continents (grouped by countries data)

-   Compare the mean of (i) average speed & (ii) reaction time by selected variables and test the hypothesis that mean (i) average speed & (ii) reaction time of swimmers for any particular event is not the same

-   Correlation between (i) average speed & (ii) reaction time for different styles, gender, distance and rounds

Below charts will be built to visualize the exploration and statistical analysis:

-   Interactive histogram and bar chart to shows the distribution using **ggiraph** and **ggplot**. The two graphs will be patched together with **patchwork**

-   Scatterdot plot to show the (i) average speed & (ii) reaction time by continents using **ggdotplotstats**

-   Volin boxplot to compare the mean of (i) average speed & (ii) reaction time using **ggbetweenstats**

-   Scatterdot plot to show the correlation between (i) average speed & (ii) reaction time using **ggstatsplots**

The app user can select different variables/ options to run customized analysis:

![](speed_reactiontime.png)

-   User can select the data scope with different variables including styles, gender, distance and rounds. In this way the user can select which variables to focus on. For example, user can select Style = backstroke, Gender = Male, Distance = 100m and Rounds = ALL to understand the average speed distribution for all rounds in the 100m Male Backstoke Event

-   User can also customize the bin size for histogram to show meaningful pattern in distribution

-   User can customize the statistical method such as parametric, nonparametric, robust or bayes for volin boxplot base on the distribution of the swimmer data.

\

### 3. Split Times

The app user will be required to choose from the following options:

\
![](NewMethod_1.jpg)

\

*\* There exists no authoritative approach to how a swimmer's pace over a race should be categorised. In general, three broad pacing "strategies" are referred to in online literature: a "positive split", where the athlete's average speed during the second half of a race is slower than that for the first half; a "negative split", where the second half is faster; and "even pacing", where the athlete maintains an even pace from the first to the second half of the race.*

*Online literature does not offer any authoritative comment on the range of variability from the athlete's average speed that qualifies as "even pacing". Thus the user may choose this range. The lower and upper ends of the range are each expressed as swimmer's average speed over the second half of the race as a percentage of the swimmer's average speed over the first half of the race. To aid the user's decision, a frequency table is automatically plotted for the chosen event, where the frequency of average speed over the second half of the race as a percentage of the average speed over the first half of the race, is shown. If the swimmer's average speed in the second half of the race is slower than this range, then the swimmer's pacing strategy is considered as "positive split"; likewise, if it is faster, then it is a "negative split".* 

\
There are five sub-sections in this section:\

#### Overview

The top of the main panel provides a visualisation offering an overview based on the app user's inputs. 

-   A multiple line chart showing the speed of each swimmer at each split. \[The average speed across all swimmers for each split is also shown.\]  

-   A bar chart showing each swimmer's average speed for each round in the event. \[This chart would be ordered from fastest to slowest speed.\] 

-   The charts are interactive - hovering over a line will highlight it and show: Name, Team, Round, Place and Final Time. The corresponding bar in the bar chart would also be highlighted. \
    \##### Distance

The app user may test the hypothesis that a swimmer's speed during a split is correlated with the distance that the swimmer is at. 

-   Visualise using a scatter plot, with distance on the x-axis and speed on the y-axis. There are two graphs: one where all splits are included, and another where the first and last splits are excluded.

-   For each, test the null hypothesis that the swimmer's split time is not at all correlated with the distance they are at in the swim, using **cor.test()**.

#### Pacing (Default)

The app user can visualise the three default pacing categories -- Positive Split, Negative Split, Even Pacing -- in a multiple line chart, where the colour of the line indicates the pacing category. 

-   Frequency table, showing the count for each percentage range (where the lower and upper ends are each average speed during second half of the race as a percentage of average speed during the first half of the race). This will help user decide what inputs to provide as the range recognised as "Even Pacing". 

-   Line chart similar to the one in overview, except lines are coloured based on pacing category 

#### Pacing (Clusters)

The app user may conduct hierarchical clustering using **hclust** to discover possible other alternative pacing clusters. 

-   The clustering is visualised as a dendrogram with clusters differentiated by colour.  

-   Cluster labels are appended to the dataset, allowing the user to visualise a multiple line chart showing how speed changes over splits for each cluster.\

#### Performance

Analysis of Variance (ANOVA) to determine presence of statistically significant differences between the mean performances for different pacing categories 

-   One-way ANOVA tests are conducted for differences in median performance (average speed, final time) for different pacing categories. The results are visualised as violin boxplots using **ggstatsplots**. (The non-parametric method is default chosen for the ANOVA tests because of small sample sizes.)

### 4. Performance Over Rounds

To enhance the dataset with more information regarding the fractional improvement of swimmers throughout the rounds, feature engineering techniques have been utilized to create new variables:  

-   Fractional Improvement (Semis to Finals)= (Semifinals Time -- Finals Time) / Semifinals Time 

-   Fractional Improvement (Heats to Finals) = (Heats Time -- Finals Time) / Heats Time 

The app user will be given the opportunity to understand how athletes' performance changes from the earlier rounds to the finals: 

-   Fractional changes in swim performance improvement between heats, semis, and finals can be uncovered by utilizing Cumulative Distribution Function (CDF) plots. These results are presented through **plotly**, providing users with the ability to zoom in on areas of interest and hover over tooltips for additional information, thus enhancing the level of interactivity. 

-   The utilization of the Gradient Interval Plot feature from **ggdist** enables straightforward visualization of the fractional time improvements' distribution at both the 66% and 95% confidence interval levels. 

### 5. Prediction

The dataset has been enriched by the introduction of new data, coupled with the application of feature engineering techniques to create variables that offer further insights into swimmers' performance with respect to Olympic success. 

-   SDTime -- This variable represents the standard deviation of a given swimmer's time logged over rounds.

-   AvgTime - This variable represents the mean of a given swimmer's time logged over rounds. 

-   Podium -- This is a binary variable which determines if a swimmer has has podiumed in his/her event.  

-   OlypRecord -- This variable represents the [Olympic Record](https://en.wikipedia.org/wiki/List_of_Olympic_records_in_swimming) time for a given event. 

-   OlypQualTime -- This variable represents the [Olympic Qualifying](https://resources.fina.org/fina/document/2022/07/15/e0f75e3c-88d5-4356-9ec6-852c8ce237b7/Paris-2024-SW-Qualification-System_ENG_H.pdf) time for a given event. 

-   RelTime_OQT = (AvgTime -  OlypQualTime)/ AvgTime 

-   RelTime_ORT = (AvgTime - OlypRecord)/ AvgTime 

-   RelTime_OQT_LR -- This binary variable represents is a swimmer's AvgTime is faster than the Olympic Qualifying time.  

-   RelTime_ORT_LR - This binary variable represents is a swimmer's AvgTime is faster than the Olympic Record time. 

In the application, users can build a multivariate regression model to analyse how the various explanatory variables influence a swimmer's Final swim time, thereby enhancing their comprehension of the performance determinants. To accomplish this, the **performance** package is utilized to visualize variable multicollinearity, where users can select appropriate variables for the regression model, and the **ggstatsplot** package is employed to visualize the regression model's parameters. 

## R Packages Used

Here is the complete list of R packages that were used to develop the app (shown in alphabetical order):

-   **dendextend**

-   **dplyr**

-   **DT**

-   **gapminder**

-   **ggdist**

-   **ggiraph**

-   **ggplot2**

-   **ggstatsplot**

-   **htmltools**

-   **lubridate**

-   **patchwork**

-   **performance**

-   **plotly**

-   **PMCMRplus**

-   **RColorBrewer**

-   **rstantools**

-   **scales**

-   **shiny**

-   **shinythemes**

-   **tidyverse**

 
